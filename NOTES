The plane is defined (in image coords) as:
  Top left:     (184, 41)
  Top right:    (428, 40)
  Bottom left:  (157,  475)
  Bottom right: (452, 474)

(Stephen). So thinking about how we will go 'back' from the (x,y,z) to RGB, I
don't think we need to. To generate a new frame, we copy the old 480x640x6
frame completely, then iterate over the pixels we care about (the plane in the
centre). For each pixel, we get the (x,y,z) value in 'real' space, then check
if it is on the plane. If it is, then we substitute in the field image pixel
that matches (via our transformation). If it is not, then we leave the RGB
colour alone. Once that is done, we have a 480x640x6 image that has the field
substituted in - pull out only the RGB layers and we're done.

Sean's Idea of Planar detection:
1) Pass in the frame in a list of points (Npoints, 6)
2) Check the rgb value of each, remove any above threshold (30,30,30)?
3) Use the select_patch code to pick random point and grow
4) Fit Plane And keep growing
5) If region is of desired size (area of the planar)
	Edge detect using RANSAC
6) Else
	Move onto next random point

7) If reach end
	No planar in image
